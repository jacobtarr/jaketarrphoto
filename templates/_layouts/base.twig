{%- minify -%}

<!doctype html>
<html class="no-js" lang="{{ craft.app.language|slice(0,2) }}">
	<head>

		<meta charset="utf-8">
		<meta http-equiv="x-ua-compatible" content="ie=edge">
		<meta
		name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
		<style>
			html[data-theme-boot] * { transition: none !important; }
		</style>
		<script>
			// set theme class before paint to avoid flash/jump
			(function () {
				var stored = localStorage.getItem('darkMode');
				var on = stored !== null ? JSON.parse(stored)
																: window.matchMedia('(prefers-color-scheme: dark)').matches;
				document.documentElement.classList.toggle('u-dark-mode', on);
			})();
		</script>
    <!-- Preconnect to Typekit -->
		<link rel="preconnect" href="https://use.typekit.net" crossorigin>
		<link rel="preconnect" href="https://p.typekit.net" crossorigin>

		<!-- Preload the stylesheet (non-blocking load) -->
		<link rel="preload" href="https://use.typekit.net/ziu3lge.css" as="style" onload="this.onload=null;this.rel='stylesheet'">

		<!-- Fallback for no-JS -->
		<noscript><link rel="stylesheet" href="https://use.typekit.net/ziu3lge.css"></noscript>
		
		{# Fonts #}
		{{ include ('_foundations/fonts', ignore_missing = true) }}

		{# CSS / JS #}
		{{ craft.vite.script('/src/index.js', false) }}

		{# Favicons #}
		{{ craft.vite.inline('@webroot/dist/favicons/webapp.html') }}

		{% if hero is defined and hero.image is defined and hero.image %}
			{# pick a sensible transform you actually use in the hero #}
			{% set preloadUrl = hero.image.getUrl({ width: 1600 }) %}
			<link
				rel="preload"
				as="image"
				href="{{ hero.image.getUrl({ width: 1600, format: 'webp' }) }}"
				imagesrcset="
					{{ hero.image.getUrl({ width: 640,  format: 'webp' }) }} 640w,
					{{ hero.image.getUrl({ width: 1024, format: 'webp' }) }} 1024w,
					{{ hero.image.getUrl({ width: 1600, format: 'webp' }) }} 1600w
				"
				imagesizes="100vw"
				type="image/webp"
				fetchpriority="high"
			/>
		{% endif %}

		{# AlpineJS "blip" Fix #}
		<style>
			[x-cloak] {
				display: none;
			}
		</style>

	</head>

	<body class="{{ bodyClass ?? '' }}">

		{% block body %}{% endblock %}

		{# Sprig script required for AJAX-based functionality #}
    {% do sprig.registerScript() %}

		{# {% if craft.app.env == 'dev' %}
			<div class="fixed bottom-0 left-0 z-50 bg-black text-white text-[15px] px-2 py-1 pointer-events-none">
				<span class="block sm:hidden">screen: xs</span>
				<span class="hidden sm:block md:hidden">screen: sm</span>
				<span class="hidden md:block lg:hidden">screen: md</span>
				<span class="hidden lg:block xl:hidden">screen: lg</span>
				<span class="hidden xl:block 2xl:hidden">screen: xl</span>
				<span class="hidden 2xl:block">screen: 2xl</span>
			</div>
		{% endif %} #}

	</body>

</html>

{%- endminify -%}
