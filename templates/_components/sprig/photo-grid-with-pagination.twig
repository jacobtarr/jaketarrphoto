{# Import the checkbox filter #}
{% import '_components/molecules/checkbox-filter.twig' as checkboxFilter %}

{# Set up default filter values or reset #}
{% if reset is defined %}
  {% set state = '' %}
  {% set season = [] %}
  {% set genre = [] %}
  {% set page = 1 %}
{% else %}
  {% set state = state ?? '' %}
  {% set season = season ?? [] %}
  {% set genre = genre ?? [] %}
  {% set page = page ?? 1 %}
{% endif %}

{# Fetch filter options #}
{% set states = craft.categories.group('state').all() %}
{% set seasons = craft.categories.group('season').all() %}
{% set genres = craft.categories.group('genre').all() %}

<div class="c-portfolio-grid grid grid-cols-4 gap-5 js-photo-grid">

  {# Sidebar Filters #}
  <div class="c-filter-sidebar col-span-1">
    <div class="c-filter-sidebar__inner space-y-5">
      <div class="flex gap-x-4 relative">
        <h4 class="text-2xl font-semibold">Filters</h4>
        {% if state or season|length > 0 or genre|length > 0 %}
          <button 
            sprig 
            s-val:reset="1" 
            class="o-button c-reset-button"
          >
            <span>Reset Filters</span>
            {% include '_components/atoms/icons/icon-close.svg' %}
          </button>
        {% endif %}
      </div>
      <div class="c-filter-box space-y-10">
        {# States Dropdown #}
        <div class="c-filter-section space-y-5">
          <div class="c-filter-section__title">States</div>
          <div class="c-filter-section__form-group space-y-5">
            <div class="c-select-container">
              <select sprig name="state" class="c-select block w-full">
                <option value="">All States</option>
                {% for stateOption in states %}
                  <option value="{{ stateOption.slug }}" {% if state == stateOption.slug %}selected{% endif %}>
                    {{ stateOption.title }}
                  </option>
                {% endfor %}
              </select>
              <span class="c-select-arrow">
                {% include '_components/atoms/icons/icon-chevron-down.svg' %}
              </span>
            </div>
          </div>
        </div>

        {# Season Checkboxes #}
        {{ checkboxFilter.renderFilter('Seasons', seasons, season, 'season') }}

        {# Genre Checkboxes #}
        {{ checkboxFilter.renderFilter('Genres', genres, genre, 'genre') }}
      </div>
    </div>
  </div>

  {# Photo Grid with Pagination #}
  <div class="col-span-3">
    {% set query = craft.entries().section('photos') %}
    {% set relatedConditions = [] %}

    {% if state and reset is not defined %}
      {% set stateCat = craft.categories.slug(state).one() %}
      {% if stateCat %}
        {% set relatedConditions = relatedConditions|merge([{ targetElement: stateCat, field: 'state' }]) %}
      {% endif %}
    {% endif %}

    {% if season is not empty and reset is not defined %}
      {% for s in season %}
        {% set seasonCat = craft.categories.slug(s).one() %}
        {% if seasonCat %}
          {% set relatedConditions = relatedConditions|merge([{ targetElement: seasonCat, field: 'season' }]) %}
        {% endif %}
      {% endfor %}
    {% endif %}

    {% if genre is not empty and reset is not defined %}
      {% for g in genre %}
        {% set genreCat = craft.categories.slug(g).one() %}
        {% if genreCat %}
          {% set relatedConditions = relatedConditions|merge([{ targetElement: genreCat, field: 'genre' }]) %}
        {% endif %}
      {% endfor %}
    {% endif %}

    {% if relatedConditions is not empty %}
      {% set query = query.relatedTo(['and']|merge(relatedConditions)) %}
    {% endif %}

    {% set pageInfo = sprig.paginate(query.limit(6), page) %}
    {% set entries = pageInfo.pageResults %}

    {% if entries %}
      <div class="grid grid-cols-3 gap-5 js-photo-grid">
        {% for entry in entries %}
          <div class="col-span-1 c-photo-block-container">
            {% include '_components/molecules/photo-block.twig' with {
              "photo": {
                "image": entry.featuredImage.one(),
                "url": entry.url,
                "title": entry.title,
                "caption": entry.location,
                "transform": 'square'
              }
            } %}
          </div>
        {% endfor %}
      </div>

      {# Pagination Controls #}
      <div class="mt-10 flex items-center justify-between">
        {% if pageInfo.currentPage > 1 %}
          <button sprig s-val:page="{{ pageInfo.currentPage - 1 }}" class="o-button">Previous</button>
        {% endif %}
        <div class="text-sm">
          Page {{ pageInfo.currentPage }} of {{ pageInfo.totalPages }}
        </div>
        {% if pageInfo.currentPage < pageInfo.totalPages %}
          <button sprig s-val:page="{{ pageInfo.currentPage + 1 }}" class="o-button">Next</button>
        {% endif %}
      </div>
    {% else %}
      <p class="mt-4">No photos match the current filters.</p>
    {% endif %}
  </div>
</div>
