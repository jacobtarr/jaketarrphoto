{% macro renderFilter(title, options, selectedOptions, inputName, iconFolder) %}
  {% set accordionId = inputName ~ 'Accordion' %}
  
  <div 
    class="c-filter-section"
    data-signals="{ {{ accordionId }}: false }"
  >
    <button
      type="button"
      class="c-filter-section__header"
      data-on-click="${{ accordionId }} = !${{ accordionId }}"
    >
      {% include '_components/kicker/kicker.twig' with {
        kicker: {
          text: title,
          classes: 'c-filter-section__title'
        }
      } %}
      
      {% include '_components/icon/icon.twig' with {
        icon: {
          name: 'chevron-down',
          classes: 'c-filter-section__icon transition-transform duration-200',
          attrs: {
            'data-class': "{ 'rotate-180': $" ~ accordionId ~ " }"
          }
        }
      } %}
    </button>
    
    <div 
      class="c-filter-section__content"
      data-class="{ 'is-open': ${{ accordionId }} }"
    >
      <div class="c-filter-section__content-inner">
        <div class="c-form-group space-y-2 pb-4">
          {% for option in options %}
            {% include '_components/checkbox/checkbox.twig' with {
              checkbox: {
                id: inputName ~ '-' ~ option.id,
                name: inputName ~ '[]',
                value: option.slug,
                label: option.title,
                checked: option.slug in selectedOptions,
                iconPath: iconFolder ? 'portfolio/' ~ iconFolder ~ '/' ~ option.slug ~ '.svg' : null,
                classes: 'c-checkbox',
                inputClasses: 'c-checkbox__input',
                attrs: {
                  'data-on-change': "
                    const url = new URL(window.location);
                    if (event.target.checked) {
                      $" ~ inputName ~ " = [...$" ~ inputName ~ ", '" ~ option.slug ~ "'];
                      url.searchParams.append('" ~ inputName ~ "[]', '" ~ option.slug ~ "');
                    } else {
                      $" ~ inputName ~ " = $" ~ inputName ~ ".filter(s => s !== '" ~ option.slug ~ "');
                      url.searchParams.delete('" ~ inputName ~ "[]');
                      $" ~ inputName ~ ".forEach(s => url.searchParams.append('" ~ inputName ~ "[]', s));
                    }
                    $offset = 0;
                    window.history.replaceState({}, '', url);
                    " ~ datastar.get('_partials/portfolio/photo-grid-container')
                }
              }
            } %}
          {% endfor %}
        </div>
      </div>
    </div>
  </div>
{% endmacro %}