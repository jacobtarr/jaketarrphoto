{% extends '_layouts/global.twig' %}

{% set hero = {
  image: entry.heroBlockImage.one(),
  heading: entry.heroBlockTitle,
  headingClasses: 'o-heading--hero',
  text: entry.heroBlockContent,
  link: entry.heroBlockLink,
  imgTransform: 'extraLarge',
  isFullBleed: entry.heroBlockFullBleed
} %}

{% set bodyClass = hero.isFullBleed ? 'hero-is-full-bleed' : '' %}

{% block site %}
  <section class="c-landing-page">
    {# <pre style="font-size: 12px">
      {{ dump(entry.getFieldValue) }}
    </pre> #}
    {% include '_components/molecules/hero.twig' with { hero: hero } %}
    {% set blocks = entry.pageBuilderFullColumnContent.all() %}

    {% for block in blocks %}
      {% set i = loop.index0 %}
      {% set currentColor = block.pageBuilderOptionBackgroundColor %}
      {% set prevColor = i > 0 ? blocks[i - 1].pageBuilderOptionBackgroundColor : null %}
      {% set nextColor = i < blocks|length - 1 ? blocks[i + 1].pageBuilderOptionBackgroundColor : null %}

      {% set isStacked = (currentColor == prevColor) or (currentColor == nextColor) %}
      {% set isStackStart = (currentColor != prevColor) and (currentColor == nextColor) %}
      {% set isStackEnd = (currentColor == prevColor) and (currentColor != nextColor) %}

      {# Open wrapper if this is the start of a stack #}
      {% if isStackStart %}
        <div class="c-page-block-stack c-page-block-stack--bg-{{ currentColor }}">
      {% endif %}

      {# Render the block as normal #}
      {% include '_blocks/' ~ block.type ~ '.twig' with {
        block: block,
        parentMatrix: 'pageBuilderFullColumnContent',
        isStacked: isStacked,
        isStackStart: isStackStart,
        isStackEnd: isStackEnd
      } %}

      {# Close wrapper if this is the end of a stack #}
      {% if isStackEnd %}
        </div>
      {% endif %}

      {# Handle single stacked block (start and end are same if it's a 2-block stack) #}
      {% if isStackStart and isStackEnd %}
        </div>
      {% endif %}
    {% endfor %}
  </section>
{% endblock %}